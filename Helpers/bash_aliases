# Write this file into your "$HOME/.bashrc" file, using Nano or whatever
#
# I know this is usually called ".bashaliases" instead, to hide the file... 
# I like it better being visible... do and call it whatever you please, just remember to import the right filename in ".bashrc"

ns3_root="$HOME/Desktop/p5/ns3/ns-allinone-3.36.1"
ns3_path="$ns3_root/ns-3.36.1"
netanim_path="$ns3_root/netanim-3.108"
output_dir="$ns3_path/output_files"

out="--cwd=$output_dir"      # Just added so you can write $out in weird cases where the ns() function is used in a way where it doesn't "catch" it.

alias py="python"                       # Less keystrokes... stupid keystrokes...
alias p5="cd $ns3_path/p5/"             # Easy access to the P5 directory
alias aau="cd $HOME/Desktop/aau/"       # Delete if you don't need it, enters my AAU folder
alias up="source ~/bash_aliases"        # Update aliases & BASH functions in your terminal
alias netanim="$netanim_path/NetAnim"   # To start NetAnim, no matter "where you are"


# -------------------------- #
# ----  NS-3 Shortcuts  ---- #
ns() { 
    # ns3_path="$HOME/Desktop/p5/ns3/ns-allinone-3.36.1/ns-3.36.1"
    # ls
    # echo "Arguments inserted are $#"

    if [[ $@ = help ]]          # Help argument is entered
    then
        $ns3_path/ns3 --help     # Run NS-3 help function

    elif [[ $@ = dir ]]         # Directory argument is entered
    then
        echo "Entering NS-3 Directory"
        cd $ns3_path             # Enter NS-3 directory in terminal

    elif [[ $@ = clean ]]   # If NS-3 cleaning function is wanted
    then
        echo -e "\n  \e[1m\e[5m\e[4mDON'T DO THIS!!!\e[0m \n" 
        echo "If you know what you're doing, call it manually in the NS-3 directory, you WILL need to reconfigure NS-3 after."
        echo -e "If you insist, use the command: \e[36mns configure --build-profile=debug --out=build/debug --enable-examples --enable-tests\e[0m"

    elif [[ $# -eq "1" ]] || [[ $1 = run ]]   # If wanting to run a script
    then
        if [[ $1 = run ]]
        then
            set -- "${@:2}"     # Remove the first "run" argument
        fi;

        #######################################
        # -- Output Folder Name Creation --
        output_name=${1%% *}                # Sort our first argument, if set in quotes
        output_name=${output_name%.*}       # Remove file-extension if still there.
        output_name=${output_name##*/}      # Remove directory path, if still there.


        if [ ! -d $output_dir/$output_name ]
        then
            mkdir -p $output_dir/$output_name
        fi;


        $ns3_path/ns3 run "$@" $out/$output_name        #Run the called NS-3 script, and put output files in the "output_files" directory


        # If there's output files, tell the user... otherwise delete the empty folder.
        if ! rmdir $output_dir/$output_name 2> /dev/null; then
            echo -e "\n\e[4mOutput files written to:\e[0m"
            echo -e "\e[3m$output_dir/$output_name\e[0m"
        fi;
    
    else
        $ns3_path/ns3 "$@"       # If more than one argument (that isn't "run") is called, call everything "normally"
    fi; 
}

